bind Space copy-mode
bind C-Space copy-mode
unbind C-o
bind C-o select-pane -t :.+

# Split pane in same directory
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Open new window in same directory
bind c new-window -c "#{pane_current_path}"

bind-key -t vi-copy y \
  copy-pipe "reattach-to-user-namespace pbcopy"

# Smart pane switching with awareness of vim splits
# bind -n C-h if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-h" "select-pane -L"
# bind -n C-j if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-j" "select-pane -D"
# bind -n C-k if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-k" "select-pane -U"
# bind -n C-l if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-l" "select-pane -R"
# bind -n "C-\\" if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-\\" "select-pane -l"

# Bring back clear screen under tmux prefix
bind C-l send-keys 'C-l'
setw -g mode-keys vi

set -g default-terminal "screen-256color"

